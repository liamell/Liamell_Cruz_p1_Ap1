@page "/Aporte/Create"
@using Liamell_Cruz_p1_Ap1.Models
@using Liamell_Cruz_p1_Ap1.Service
@inject AportesService aportesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer


@*HTML*@

<PageTitle>Create</PageTitle>
<EditForm Model="Aporte" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Crear Aporte</h5>
            </div>

            <div class="card-body">
                @* AporteId *@
                <div class="col-7 ms-3">
                    <label class="form-label"><strong>AporteId</strong></label>
                    <InputNumber class="form-control" @bind-Value="Aporte.AporteId" readonly></InputNumber>
                </div>


                @*Fecha*@
                <div class="col-3 ms-3">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="Aporte.Fecha"></InputDate>
                    <ValidationMessage For="(()=> Aporte.Fecha)" />
                </div>


                @*Persona*@
                <div class="col-3 ms-3">
                    <label class="form-label"><strong>Persona</strong></label>
                    <InputText class="form-control" @bind-Value="Aporte.Persona"></InputText>
                    <ValidationMessage For="(()=> Aporte.Persona)" />
                </div>


                @*Observacion*@
                <div class="col-3 ms-3">
                    <label class="form-label"><strong>Observacion</strong></label>
                    <InputText class="form-control" @bind-Value="Aporte.Observacion"></InputText>
                    <ValidationMessage For="(()=> Aporte.Observacion)" />
                </div>

                @* Monto *@
                <div class="col-3 ms-3">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber class="form-control" @bind-Value="Aporte.Monto"></InputNumber>
                    <ValidationMessage For="(() => Aporte.Monto)" />
                </div>

            </div>
            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
                <button type="submit" class="btn btn-success">Guardar</button>
            </div>
        </div>

    </div>
</EditForm>





@Mensaje

@code {

    public Aportes Aporte { get; set; } = new Aportes();
    public List<Aportes> ListaAportes{ get; set; } = new List<Aportes>();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaAportes = await aportesService.Listar(a => a.AporteId > 0);

    }

    public async Task Guardar()
    {
        if (await Validar())
        {
            Mensaje = "Ya existe esta persona";
            return;
        }

        var crear = await aportesService.Guardar(Aporte);

        if (crear)
            Mensaje = "Se ha creado correctamente";
        else
            Mensaje = "No se ha creado correctamente";

    }

    private async Task<bool> Validar()
    {
        var existe = await aportesService.ExistePersona(Aporte.AporteId, Aporte.Persona);
        return existe;
    }

    
    public void Volver()
    {
        navigationManager.NavigateTo("/Aporte/Index");
    }



}








@page "/Aporte/Delete/{AporteId:int}"
@using Liamell_Cruz_p1_Ap1.Models
@using Liamell_Cruz_p1_Ap1.Service
@inject AportesService aportesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer



@*HTML*@

<PageTitle> Eliminar Aporte</PageTitle>
<div class="container">
	<div class="card shadow-lg">

		@*Header*@
		<div class="card-header text-center">
			<h3><strong>Eliminar Aporte</strong></h3>
		</div>
		@*Body*@
		<div class="card-body">
			<div class="text-center">
				<h4><strong>Desea eliminar este Aporte?</strong></h4>
			</div>
			<ul class="mt-5">
				<li><strong>Id: </strong>@Aporte.AporteId</li>
				<li><strong>Fecha: </strong>@Aporte.Fecha</li>
				<li><strong>Persona: </strong>@Aporte.Persona</li>
				<li><strong>Observacion: </strong>@Aporte.Observacion</li>
				<li><strong>Monto: </strong>@Aporte.Monto</li>
			</ul>
		</div>

		@*Footer*@
		<div class="card-footer text-center">
			<button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
			<button Type="button" Class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
		</div>
	</div>
</div>



@Mensaje

@code {

	[Parameter]
	public int AporteId { get; set; }
	public Aportes Aporte { get; set; } = new Aportes();
	public string Mensaje { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Aporte = await aportesService.Buscar(AporteId);

	}

	private async Task Eliminar()
	{
		var eliminado = await aportesService.Eliminar(AporteId);

		if (eliminado)
			Mensaje = "El Aporte ha sidoeliminado correctamente";
		else

			Mensaje = "No se ha podido eliminar";

	}

	public void Volver()
	{
		navigationManager.NavigateTo("/Aporte/Index");
	}




}

